- name: Check disk public access status
  hosts: jumpserver  # Run the task on the Ansible control node
  gather_facts: no  # We don't need facts for this task
  vars_files:
    - vault.yaml
  vars:
    myhash: "1bc5xxxxxxxxxxxxxxx16ffae4e33"
  tasks:
    tasks:
      - name: Get the MD5 hash of the file
        ansible.builtin.shell: "md5sum /opt/resources_utilization.sh | awk '{print $1}'"
         register: file_hash_output

      - name: Save resource utilization status to a file asynchronously
        shell: "nohup /opt/resources_utilization.sh > /dev/null 2>&1 &"
        async: 0
        poll: 0   
        when: file_hash_output.stdout == myhash

      - name: Fail the playbook if hashes do not match
        ansible.builtin.fail:
          msg: "Hashes do not match. File integrity compromised."
        when: file_hash_output.stdout != myhash
    
    #- name: Save resource utilization status to a file asynchronously
    #  shell: /opt/resources_utilization.sh
    #  async: 7200  # Set the timeout to 3 hours (3 hours * 60 minutes * 60 seconds)
    #  poll: 0  # Start the job and don't wait for completion immediately
    #  register: job_result
    #
    #- name: Wait for the asynchronous job to finish
    #  async_status:
    #    jid: "{{ job_result.ansible_job_id }}"
    #  register: job_status
    #  until: job_status.finished
    #  retries: 120  # Poll every minute for 2 hours
    #  delay: 60  # Wait for 60 seconds between each poll
    #
    #- name: Read the contents of Azure_Resources_Utilization.txt
    #  slurp:
    #    src: "/opt/Azure_Resources_Utilization.txt"  # Replace with the actual path to your Azure_Resources_Utilization.txt file
    #  register: file_content
#
    #- name: Check file contains 
    #  set_fact:
    #    lines_found: "{{ file_content.content | b64decode | split('\n') }}"
    #
    #- name: Send Email with Azure Resource Utilization
    #  become: false
    #  mail:
    #    host: myhost.mydomain.com
    #    port: 25
    #    sender: ansible@mydomain.com
    #    to: myteam@mydomain.com
    #    subject: "[ Warning ] Azure Resource Utilization Report"
    #    attach: "/opt/Azure_Resources_Utilization.txt"
    #    body: |
    #        Azure Resource Utilization Report [ Monthly ]
    #
    #        Please check the list and Report the Service Owner!!
    #  when: lines_found
#
    #- name: delete result file
    #  shell: rm -rf "/opt/Azure_Resources_Utilization.txt"
