- name: Check Service principals status
  hosts: jumpserver  # Run the task on the Ansible control node
  gather_facts: no  # We don't need facts for this task
  vars_files:
    - vault.yaml
  tasks:
    - name: Get Service principals client status
      shell: |
        cat << 'EOF' > /opt/HCE/Out_of_standart_SP_sendmail.sh
        #!/bin/bash
        
        az login --service-principal --username {{ username }} --password {{ password }} --tenant {{ tenant }}

        # Email configuration
        subject="[Important] - Service Principal Security Compliance"
        
        # Define CC recipients (comma-separated list)
        cc_recipients="team1@mydomain.com,team2@mydomain.com"
        
        # Get the list of all Azure AD Applications and store the output in a variable
        for app_id in $(az ad app list --query "[].{AppId: appId}" --output tsv); do
        
            # Get the Azure AD Application details and store the output in a variable
            app_details=$(az ad app show --id $app_id --output json)
            # Extract the DisplayName using jq
            display_name=$(echo "$app_details" | jq -r '.displayName')
           
            #find the mail addres of owners
            receivers=$(az ad app owner list --id $app_id --query "[].userPrincipalName" -o json)    
        
            # Extract and concatenate the email addresses into a single line with comma separation
            recipient=$(echo "$receivers" | jq -r '. | join(",")')
            if [ "$receivers" == "[]" ]; then
               recipient="team1@mydomain.com"
            fi 
           
            # Get the client secrets for the current App Registration
            client_secrets=$(az ad app credential list --id $app_id --query "[].{startDateTime: startDateTime, endDateTime: endDateTime}" -o tsv)
            
            # Loop through the client secrets
            while read -r start_date end_date; do
                # Check if both start and end dates exist
                if [ "$start_date" != "null" ] && [ "$end_date" != "null" ]; then
                    # Convert dates to Unix timestamps
                    start_timestamp=$(date -u -d "$start_date" +%s)
                    end_timestamp=$(date -u -d "$end_date" +%s)
                    # Calculate the difference in seconds (1 year = 31536000 seconds)
                    one_year_in_seconds=31536000
                    difference=$((end_timestamp - start_timestamp))
        
                    expiry_days="$(( ($end_timestamp - $start_timestamp) / (3600 * 24) ))"
                    # Check if the difference is greater than 1 year
                    if [ $difference -gt $one_year_in_seconds ]; then
                        email_body="Dear Colleagues,
        
        
                        Status       AppId       DisplayName       Total_Date       Start Date       End Date
                        =====================================================================================
                        Warning   $app_id   $display_name   $expiry_days   $start_date   $end_date
        
        
                        We are writing to you about our Azure service principals and their compliance with our company's security standards. 
                        We have found that client secrets that have been identified for over a year do not meet company standards.
                        
                        Azure service principals play a crucial role in securing our cloud infrastructure, and ensuring that they meet our security standards is of paramount importance. This ensures the safety of our data and resources and mitigates potential security risks.
                        
                        there are service principals within our Azure environment that have not undergone the necessary updates or security enhancements to align with our company standards, specifically in relation to client secrets. Non-compliance with these standards poses a significant security risk to our organization.
                        
                        Action Required:
                        
                        1. **Immediate Review**: We request that you initiate an immediate review of all Azure service principals associated with client secrets that are not in compliance with our standards.
                        
                        2. **Remediation**: Any non-compliant service principals must be brought into compliance as soon as possible. This includes updating client secrets, following best practices for secret management, and addressing any other security gaps.
                        
                        Failure to take immediate corrective action could result in severe security breaches and potential data loss. It is crucial that we address this issue promptly to maintain the security and integrity of our Azure environment.
                        
                        Please provide an update on the actions taken and the progress of the remediation efforts within 14 days. If you require assistance or additional resources, please do not hesitate to reach out to our security/compliance team.
                        
                        Your cooperation in addressing this matter is critical, and we appreciate your prompt attention to this issue. Should you have any questions or require further guidance, please feel free to contact HCE team.
                        
                        Thank you for your commitment to maintaining the highest security standards for our Azure environment.
                        
                        Sincerely"
        
                        # Send the email
                        echo -e "$email_body" | mail -s "$subject" -c "$cc_recipients" "$recipient"
                    fi
                fi
            done <<< "$client_secrets"
        done
        EOF
        chmod +x /opt/HCE/Out_of_standart_SP_sendmail.sh

    - name: Save Service principals status to a file
      shell: /opt/HCE/Out_of_standart_SP_sendmail.sh

    - name: delete result file
      shell: rm -rf /opt/HCE/Out_of_standart_SP_sendmail.sh
