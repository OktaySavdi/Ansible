- name: get tcpdump filename
  raw: |
    echo {{pod_name}}-$(date +"%m-%d-%Y-%H-%M-%S").pcap
  register: tcpdump_filename

- name: get node ip addres
  shell: oc get node $(oc get po -A -o wide | grep "{{ pod_name }}" | awk '{print $8}') -o wide --no-headers | awk '{print $6}'
  environment:
    KUBECONFIG: "/root/files/ocp/installation/{{ cluster }}/kubeconfig"
  register: get_node_ip_address
  
- name: get tcp dump
  shell: |
     ssh core@{{ get_node_ip_address.stdout | trim }} << 'EOF'
     sudo -i
     export http_proxy=http://myproxy.mydomain.com:80
     export https_proxy=http://myproxy.mydomain.com:80
     export no_proxy=".mydomain.com.tr,.mydomain2.com.tr,127.0.0.1"
     export HTTP_PROXY=$http_proxy
     export HTTPS_PROXY=$http_proxy
     pod_pid=$(crictl inspect $(crictl ps -q) | grep '"io.kubernetes.pod.name": "{{ pod_name }}"' -A 100 | grep pid  |head -1 | awk '{print $2}' | sed 's/,*$//g')
     podman run -it --rm --name rhel-tools --privileged --ipc=host --net=host --pid=host \
     -e HOST=/host \
     -e NAME=rhel-tools \
     -e IMAGE=rhel7/rhel-tools \
     -v /run:/run \
     -v /var/log:/var/log \
     -v /etc/localtime:/etc/localtime \
     -v /:/host/ \
     rhel7/rhel-tools \
     timeout {{ timeout }}s nsenter -t $pod_pid -n -- tcpdump -i any -nn -w /host/mnt/{{ tcpdump_filename.stdout | trim }}
     EOF
  ignore_errors: true
  
- name: deploy pcap file to ftp
  shell: |
     ssh core@{{ get_node_ip_address.stdout | trim }} << 'EOF'
     sudo -i
     export http_proxy=http://myproxy.mydomain.com:80
     export https_proxy=http://myproxy.mydomain.com:80
     export no_proxy=".mydomain.com.tr,.mydomain2.com.tr,127.0.0.1"
     export HTTP_PROXY=$http_proxy
     export HTTPS_PROXY=$http_proxy
     export NO_PROXY=$no_proxy
     curl -T /mnt/{{ tcpdump_filename.stdout | trim }} ftp://{{ftp_server}}/{{ftp_path}}/{{ tcpdump_filename.stdout | trim }}
     rm -rf  /mnt/{{ tcpdump_filename.stdout | trim }}
     EOF
